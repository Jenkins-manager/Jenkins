[
  "tests/test_answer_processor.py::TestClass::()::test_getTime", 
  "tests/test_answer_processor.py::TestClass::()::test_getDate", 
  "tests/test_answer_processor.py::TestClass::()::test_getWeather", 
  "tests/test_answer_processor.py::TestClass::()::test_getLocation", 
  "tests/test_answer_processor.py::TestClass::()::test_getName", 
  "tests/test_file_processor.py::TestClass::()::test_make_file_path", 
  "tests/test_file_processor.py::TestClass::()::test_read_file_test_file", 
  "tests/test_file_processor.py::TestClass::()::test_read_file_throws_when_invalid_file", 
  "tests/test_file_processor.py::TestClass::()::test_write_file_writes_test_file", 
  "tests/test_file_processor.py::TestClass::()::test_write_file_appends_text", 
  "tests/test_file_processor.py::TestClass::()::test_write_file_throws_with_invlaid_Action", 
  "tests/test_question_analysis.py::TestClass::()::test_question_destroy_can_break_question_into_words", 
  "tests/test_question_analysis.py::TestClass::()::test_question_destroy_makes_all_lowercase", 
  "tests/test_question_analysis.py::TestClass::()::test_question_destroy_with_no_question", 
  "tests/test_question_analysis.py::TestClass::()::test_remove_non_keywords_removes_correctly", 
  "tests/test_question_analysis.py::TestClass::()::test_remove_non_keywords_dosent_remove_keyword", 
  "tests/test_question_analysis.py::TestClass::()::test_non_keywords_list", 
  "tests/test_question_analysis.py::TestClass::()::test_get_question_keywords_contains_starting_words", 
  "tests/test_question_analysis.py::TestClass::()::test_match_keyword_to_address_sucess", 
  "tests/test_question_analysis.py::TestClass::()::test_match_keywords_fail", 
  "tests/test_question_analysis.py::TestClass::()::test_match_keywords_using_two_keywords", 
  "tests/test_question_analysis.py::TestClass::()::test_compare_keyword_to_list", 
  "tests/test_question_analysis.py::TestClass::()::test_compare_keyword_to_list_should_fail", 
  "tests/test_question_analysis.py::TestClass::()::test_compare_keyword_to_list_using_two_similar_words", 
  "tests/test_question_analysis.py::TestClass::()::test_find_synonym", 
  "tests/test_question_analysis.py::TestClass::()::test_find_synonym_no_match", 
  "tests/test_question_analysis.py::TestClass::()::test_find_synonym_multiple_matches", 
  "tests/test_question_analysis.py::TestClass::()::test_add_word_to_keyword_list", 
  "tests/test_question_analysis.py::TestClass::()::test_process_user_question_using_known_keyword", 
  "tests/test_question_analysis.py::TestClass::()::test_process_user_question_using_similar_keyword", 
  "tests/test_question_analysis.py::TestClass::()::test_process_user_question_using_thesauras", 
  "tests/test_request_processor.py::TestClass::()::test_check_request_no_throw_with_vaid_input", 
  "tests/test_request_processor.py::TestClass::()::test_check_request_returns_correct_address", 
  "tests/test_request_processor.py::TestClass::()::test_check_request_throws_with_no_input", 
  "tests/test_request_processor.py::TestClass::()::test_check_request_throws_with_invalid_question", 
  "tests/test_request_processor.py::TestClass::()::test_get_answer", 
  "tests/test_request_processor.py::TestClass::()::test_process_request_bad_question_address", 
  "tests/test_request_processor.py::TestClass::()::test_get_answer_invalid_answer", 
  "tests/features/test_question_and_answers.py::TestClass::()::test_question_can_be_received", 
  "tests/features/test_question_and_answers.py::TestClass::()::test_answer_can_be_fetched_and_excecuted", 
  "tests/features/test_question_and_answers.py::TestClass::()::test_program_can_receive_question_and_pick_answer_correctly", 
  "tests/features/test_question_and_answers.py::TestClass::()::test_user_can_ask_question_and_get_stored_answer", 
  "tests/machine_learning_tests/test_machine_learn.py::TestClass::()::test_can_load_value_set", 
  "tests/machine_learning_tests/test_machine_learn.py::TestClass::()::test_can_load_desired_set", 
  "tests/machine_learning_tests/test_machine_learn.py::TestClass::()::test_train_network", 
  "tests/machine_learning_tests/test_machine_learn.py::TestClass::()::test_thread_start"
]